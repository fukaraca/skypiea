name: CI Pipeline
run-name: Test of PR by @${{ github.actor }}

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh \
            | sh -s -- -b "$(go env GOPATH)"/bin v2.0.2

      - name: Run linter
        run: make lint

      - name: Run tests
        run: make test

      - name: Set up Helm
        uses: azure/setup-helm@v4.3.0
        with:
          version: '4.3.0'

      - name: Helm lint chart
        run: helm lint ./helm/skypiea-ai

      - name: Dry-run chart
        run: |
          helm template skypiea-ai ./helm/skypiea-ai \
            --values ./helm/skypiea-ai/values.yaml \
            > /dev/null

  build-and-push:
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Compute Base Version & Build Number
        id: compute-version
        run: |
          BASE_VERSION="$(cat .Version | tr -d '[:space:]')"
          BUILD_NUMBER="${{ github.run_number }}"
          FULL_VERSION="${BASE_VERSION}.${BUILD_NUMBER}"

          echo "base_version=$BASE_VERSION" >> "$GITHUB_OUTPUT"
          echo "build_number=$BUILD_NUMBER" >> "$GITHUB_OUTPUT"
          echo "full_version=$FULL_VERSION" >> "$GITHUB_OUTPUT"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT2GHCR }}

      - name: Build and push Docker image for Server
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./docker/server.Dockerfile
          build-args: |
            FULL_VERSION=${{ steps.compute-version.outputs.full_version }}
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/skypiea-server:${{ steps.compute-version.outputs.full_version }}
            ghcr.io/${{ github.repository_owner }}/skypiea-server:latest

      - name: Build and push Docker image for Worker
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./docker/worker.Dockerfile
          build-args: |
            FULL_VERSION=${{ steps.compute-version.outputs.full_version }}
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/skypiea-worker:${{ steps.compute-version.outputs.full_version }}
            ghcr.io/${{ github.repository_owner }}/skypiea-worker:latest

      - name: Package chart
        env:
          CHART_VERSION: ${{ steps.compute-version.outputs.full_version }}
        run: |
          helm package ./helm/skypiea-ai \
            --version "$CHART_VERSION" \
            --app-version "$CHART_VERSION" \
            --destination ./chart-dist

      - name: Push chart to GHCR
        env:
          CHART_VERSION: ${{ steps.compute-version.outputs.full_version }}
          GHCR_REPO: ghcr.io/${{ github.repository_owner }}/helm
        run: |
          helm registry login ghcr.io \
            --username '${{ github.actor }}' \
            --password '${{ secrets.PAT2GHCR }}'

          helm push ./chart-dist/skypiea-ai-"$CHART_VERSION".tgz \
            oci://$GHCR_REPO